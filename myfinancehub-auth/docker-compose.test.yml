# not working at the moment with mongodb-memory-server
# so you should run tets locally with
# npm run test:watch or npm run test

version: '3'
services:
  auth-api-app-test:
    build:
      args:
        - NODE_ENV=development
      context: ./
      target: development
      dockerfile: Dockerfile
    container_name: auth-api-app-test
    restart: 'no'
    env_file: ./.env.test
    environment:
      - PORT=${AUTH_API_PORT}
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_HOSTNAME=${MONGO_HOSTNAME}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
    ports:
      - ${AUTH_API_PORT}:${AUTH_API_PORT}
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules # to keep separate node_modules for each container
    networks:
      - mfhnetwork
    depends_on:
      - auth-api-db-test
    command: npm run test:watch

  auth-api-db-test:
    build:
      context: ./auth-api-db
      dockerfile: Dockerfile
    container_name: auth-api-db-test
    restart: unless-stopped
    env_file: ./.env.test
    environment:
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - auth-api-mongodb-data:/data/db # Mount a volume for MongoDB data
    networks:
      - mfhnetwork
    #command: mongod --quiet --logpath /dev/null # --quiet to hide logs
    
volumes:
  auth-api-mongodb-data:

networks:
  mfhnetwork:
     driver: bridge # enables communication between containers since they are on the same Docker daemon host